<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20161106</FitNesseVersion>
  <rootPath>FrontPage.XebiumTemplate.SuiteTearDown</rootPath>
    <result>
    <counts>
      <right>0</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <date>2017-04-03T15:21:46+08:00</date>
    <runTimeInMillis>313</runTimeInMillis>
    <content>&lt;div class="collapsible closed"&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='#' class='expandall'&gt;Expand&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='#' class='collapseall'&gt;Collapse&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
	&lt;p class="title"&gt;Included page: &lt;a href="FrontPage.XebiumTemplate.ScenarioLibrary"&gt;.FrontPage.XebiumTemplate.ScenarioLibrary&lt;/a&gt; &lt;a href="FrontPage.XebiumTemplate.ScenarioLibrary?edit&amp;amp;redirectToReferer=true&amp;amp;redirectAction=" class="edit"&gt;(edit)&lt;/a&gt;&lt;/p&gt;
	&lt;div&gt;In the Scenario library the logical steps in the test case can be translated to Xebium statements. Normally this means splitting up the test recorded with Selenium IDE.&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;scenario&lt;/td&gt;
		&lt;td colspan="4"&gt;Given a working fitnesse instance&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor8"&gt;
		&lt;td&gt;ensure&lt;/td&gt;
		&lt;td&gt;do&lt;/td&gt;
		&lt;td&gt;open&lt;/td&gt;
		&lt;td&gt;on&lt;/td&gt;
		&lt;td&gt;/&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor8"&gt;
		&lt;td&gt;ensure&lt;/td&gt;
		&lt;td&gt;do&lt;/td&gt;
		&lt;td&gt;verifyTextPresent&lt;/td&gt;
		&lt;td&gt;on&lt;/td&gt;
		&lt;td&gt;XebiumTemplate&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;scenario&lt;/td&gt;
		&lt;td colspan="4"&gt;When I open the link to the template project&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor8"&gt;
		&lt;td&gt;ensure&lt;/td&gt;
		&lt;td&gt;do&lt;/td&gt;
		&lt;td&gt;clickAndWait&lt;/td&gt;
		&lt;td&gt;on&lt;/td&gt;
		&lt;td&gt;link=XebiumTemplate&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;scenario&lt;/td&gt;
		&lt;td colspan="4"&gt;Then the template directory structure is shown&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor8"&gt;
		&lt;td&gt;ensure&lt;/td&gt;
		&lt;td&gt;do&lt;/td&gt;
		&lt;td&gt;verifyTextPresent&lt;/td&gt;
		&lt;td&gt;on&lt;/td&gt;
		&lt;td&gt;Scenario Library&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;After all tests are executed, the browser can be shut down.&lt;br/&gt;&lt;br/&gt;&lt;table&gt;
	&lt;tr class="slimRowTitle"&gt;
		&lt;td&gt;script&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr class="slimRowColor8"&gt;
		&lt;td&gt;stop browser&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
</content>
    <relativePageName>SuiteTearDown</relativePageName>
            <instructions>
            <instructionResult>
        <instruction>{id='scriptTable_3_0', instruction='call', instanceName='scriptTableActor', methodName='stopBrowser', args=[]}</instruction>
        <slimResult></slimResult>
                <expectation>
                    <instructionId>scriptTable_3_0</instructionId>
                    <col>0</col>
                              <row>1</row>
                    <type>ScriptActionExpectation</type>
                                      </expectation>
              </instructionResult>
          </instructions>
      </result>
  <finalCounts>
    <right>1</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  <totalRunTimeInMillis>313</totalRunTimeInMillis>
</testResults>

